{"code":"(this.webpackJsonpMorgan_site_project=this.webpackJsonpMorgan_site_project||[]).push([[51],{165:function(t,e,n){\"use strict\";n.r(e),n.d(e,\"KEYBOARD_DID_CLOSE\",(function(){return r})),n.d(e,\"KEYBOARD_DID_OPEN\",(function(){return i})),n.d(e,\"copyVisualViewport\",(function(){return D})),n.d(e,\"keyboardDidClose\",(function(){return b})),n.d(e,\"keyboardDidOpen\",(function(){return p})),n.d(e,\"keyboardDidResize\",(function(){return g})),n.d(e,\"resetKeyboardAssist\",(function(){return a})),n.d(e,\"setKeyboardClose\",(function(){return h})),n.d(e,\"setKeyboardOpen\",(function(){return f})),n.d(e,\"startKeyboardAssist\",(function(){return s})),n.d(e,\"trackViewportChanges\",(function(){return y}));var i=\"ionKeyboardDidShow\",r=\"ionKeyboardDidHide\",o={},u={},d=!1,a=function(){o={},u={},d=!1},s=function(t){c(t),t.visualViewport&&(u=D(t.visualViewport),t.visualViewport.onresize=function(){y(t),p()||g(t)?f(t):b(t)&&h(t)})},c=function(t){t.addEventListener(\"keyboardDidShow\",(function(e){return f(t,e)})),t.addEventListener(\"keyboardDidHide\",(function(){return h(t)}))},f=function(t,e){w(t,e),d=!0},h=function(t){v(t),d=!1},p=function(){var t=(o.height-u.height)*u.scale;return!d&&o.width===u.width&&t>150},g=function(t){return d&&!b(t)},b=function(t){return d&&u.height===t.innerHeight},w=function(t,e){var n=e?e.keyboardHeight:t.innerHeight-u.height,r=new CustomEvent(i,{detail:{keyboardHeight:n}});t.dispatchEvent(r)},v=function(t){var e=new CustomEvent(r);t.dispatchEvent(e)},y=function(t){o=Object.assign({},u),u=D(t.visualViewport)},D=function(t){return{width:Math.round(t.width),height:Math.round(t.height),offsetTop:t.offsetTop,offsetLeft:t.offsetLeft,pageTop:t.pageTop,pageLeft:t.pageLeft,scale:t.scale}}}}]);","name":"static/js/51.56c2d503.chunk.js","map":{"version":3,"sources":["static/js/51.56c2d503.chunk.js"],"names":["this","push","165","module","__webpack_exports__","__webpack_require__","r","d","KEYBOARD_DID_CLOSE","KEYBOARD_DID_OPEN","copyVisualViewport","keyboardDidClose","keyboardDidOpen","keyboardDidResize","resetKeyboardAssist","setKeyboardClose","setKeyboardOpen","startKeyboardAssist","trackViewportChanges","previousVisualViewport","currentVisualViewport","keyboardOpen","win","startNativeListeners","visualViewport","onresize","addEventListener","ev","fireKeyboardOpenEvent","fireKeyboardCloseEvent","scaledHeightDifference","height","scale","width","innerHeight","nativeEv","keyboardHeight","CustomEvent","detail","dispatchEvent","Object","assign","Math","round","offsetTop","offsetLeft","pageTop","pageLeft"],"mappings":"CAACA,KAAsC,gCAAIA,KAAsC,iCAAK,IAAIC,KAAK,CAAC,CAAC,IAAI,CAE/FC,IACA,SAAUC,EAAQC,EAAqBC,GAE7C,aACAA,EAAoBC,EAAEF,GACSC,EAAoBE,EAAEH,EAAqB,sBAAsB,WAAa,OAAOI,KACrFH,EAAoBE,EAAEH,EAAqB,qBAAqB,WAAa,OAAOK,KACpFJ,EAAoBE,EAAEH,EAAqB,sBAAsB,WAAa,OAAOM,KACrFL,EAAoBE,EAAEH,EAAqB,oBAAoB,WAAa,OAAOO,KACnFN,EAAoBE,EAAEH,EAAqB,mBAAmB,WAAa,OAAOQ,KAClFP,EAAoBE,EAAEH,EAAqB,qBAAqB,WAAa,OAAOS,KACpFR,EAAoBE,EAAEH,EAAqB,uBAAuB,WAAa,OAAOU,KACtFT,EAAoBE,EAAEH,EAAqB,oBAAoB,WAAa,OAAOW,KACnFV,EAAoBE,EAAEH,EAAqB,mBAAmB,WAAa,OAAOY,KAClFX,EAAoBE,EAAEH,EAAqB,uBAAuB,WAAa,OAAOa,KACtFZ,EAAoBE,EAAEH,EAAqB,wBAAwB,WAAa,OAAOc,KACtH,IAAIT,EAAoB,qBACpBD,EAAqB,qBAErBW,EAAyB,GACzBC,EAAwB,GACxBC,GAAe,EAKfP,EAAsB,WACxBK,EAAyB,GACzBC,EAAwB,GACxBC,GAAe,GAGbJ,EAAsB,SAA6BK,GACrDC,EAAqBD,GAEhBA,EAAIE,iBAITJ,EAAwBV,EAAmBY,EAAIE,gBAE/CF,EAAIE,eAAeC,SAAW,WAC5BP,EAAqBI,GAEjBV,KAAqBC,EAAkBS,GACzCN,EAAgBM,GACPX,EAAiBW,IAC1BP,EAAiBO,MAWnBC,EAAuB,SAA8BD,GACvDA,EAAII,iBAAiB,mBAAmB,SAAUC,GAChD,OAAOX,EAAgBM,EAAKK,MAE9BL,EAAII,iBAAiB,mBAAmB,WACtC,OAAOX,EAAiBO,OAIxBN,EAAkB,SAAyBM,EAAKK,GAClDC,EAAsBN,EAAKK,GAC3BN,GAAe,GAGbN,EAAmB,SAA0BO,GAC/CO,EAAuBP,GACvBD,GAAe,GAgBbT,EAAkB,WACpB,IAAIkB,GAA0BX,EAAuBY,OAASX,EAAsBW,QAAUX,EAAsBY,MACpH,OAAQX,GAAgBF,EAAuBc,QAAUb,EAAsBa,OAASH,EA1EjE,KAkFrBjB,EAAoB,SAA2BS,GACjD,OAAOD,IAAiBV,EAAiBW,IAUvCX,EAAmB,SAA0BW,GAC/C,OAAOD,GAAgBD,EAAsBW,SAAWT,EAAIY,aAO1DN,EAAwB,SAA+BN,EAAKa,GAC9D,IAAIC,EAAiBD,EAAWA,EAASC,eAAiBd,EAAIY,YAAcd,EAAsBW,OAC9FJ,EAAK,IAAIU,YAAY5B,EAAmB,CAC1C6B,OAAQ,CACNF,eAAgBA,KAGpBd,EAAIiB,cAAcZ,IAOhBE,EAAyB,SAAgCP,GAC3D,IAAIK,EAAK,IAAIU,YAAY7B,GACzBc,EAAIiB,cAAcZ,IAUhBT,EAAuB,SAA8BI,GACvDH,EAAyBqB,OAAOC,OAAO,GAAIrB,GAC3CA,EAAwBV,EAAmBY,EAAIE,iBAQ7Cd,EAAqB,SAA4Bc,GACnD,MAAO,CACLS,MAAOS,KAAKC,MAAMnB,EAAeS,OACjCF,OAAQW,KAAKC,MAAMnB,EAAeO,QAClCa,UAAWpB,EAAeoB,UAC1BC,WAAYrB,EAAeqB,WAC3BC,QAAStB,EAAesB,QACxBC,SAAUvB,EAAeuB,SACzBf,MAAOR,EAAeQ"},"input":"(this[\"webpackJsonpMorgan_site_project\"] = this[\"webpackJsonpMorgan_site_project\"] || []).push([[51],{\n\n/***/ 165:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"KEYBOARD_DID_CLOSE\", function() { return KEYBOARD_DID_CLOSE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"KEYBOARD_DID_OPEN\", function() { return KEYBOARD_DID_OPEN; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"copyVisualViewport\", function() { return copyVisualViewport; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"keyboardDidClose\", function() { return keyboardDidClose; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"keyboardDidOpen\", function() { return keyboardDidOpen; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"keyboardDidResize\", function() { return keyboardDidResize; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"resetKeyboardAssist\", function() { return resetKeyboardAssist; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setKeyboardClose\", function() { return setKeyboardClose; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setKeyboardOpen\", function() { return setKeyboardOpen; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"startKeyboardAssist\", function() { return startKeyboardAssist; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"trackViewportChanges\", function() { return trackViewportChanges; });\nvar KEYBOARD_DID_OPEN = 'ionKeyboardDidShow';\nvar KEYBOARD_DID_CLOSE = 'ionKeyboardDidHide';\nvar KEYBOARD_THRESHOLD = 150;\nvar previousVisualViewport = {};\nvar currentVisualViewport = {};\nvar keyboardOpen = false;\n/**\n * This is only used for tests\n */\n\nvar resetKeyboardAssist = function resetKeyboardAssist() {\n  previousVisualViewport = {};\n  currentVisualViewport = {};\n  keyboardOpen = false;\n};\n\nvar startKeyboardAssist = function startKeyboardAssist(win) {\n  startNativeListeners(win);\n\n  if (!win.visualViewport) {\n    return;\n  }\n\n  currentVisualViewport = copyVisualViewport(win.visualViewport);\n\n  win.visualViewport.onresize = function () {\n    trackViewportChanges(win);\n\n    if (keyboardDidOpen() || keyboardDidResize(win)) {\n      setKeyboardOpen(win);\n    } else if (keyboardDidClose(win)) {\n      setKeyboardClose(win);\n    }\n  };\n};\n/**\n * Listen for events fired by native keyboard plugin\n * in Capacitor/Cordova so devs only need to listen\n * in one place.\n */\n\n\nvar startNativeListeners = function startNativeListeners(win) {\n  win.addEventListener('keyboardDidShow', function (ev) {\n    return setKeyboardOpen(win, ev);\n  });\n  win.addEventListener('keyboardDidHide', function () {\n    return setKeyboardClose(win);\n  });\n};\n\nvar setKeyboardOpen = function setKeyboardOpen(win, ev) {\n  fireKeyboardOpenEvent(win, ev);\n  keyboardOpen = true;\n};\n\nvar setKeyboardClose = function setKeyboardClose(win) {\n  fireKeyboardCloseEvent(win);\n  keyboardOpen = false;\n};\n/**\n * Returns `true` if the `keyboardOpen` flag is not\n * set, the previous visual viewport width equal the current\n * visual viewport width, and if the scaled difference\n * of the previous visual viewport height minus the current\n * visual viewport height is greater than KEYBOARD_THRESHOLD\n *\n * We need to be able to accommodate users who have zooming\n * enabled in their browser (or have zoomed in manually) which\n * is why we take into account the current visual viewport's\n * scale value.\n */\n\n\nvar keyboardDidOpen = function keyboardDidOpen() {\n  var scaledHeightDifference = (previousVisualViewport.height - currentVisualViewport.height) * currentVisualViewport.scale;\n  return !keyboardOpen && previousVisualViewport.width === currentVisualViewport.width && scaledHeightDifference > KEYBOARD_THRESHOLD;\n};\n/**\n * Returns `true` if the keyboard is open,\n * but the keyboard did not close\n */\n\n\nvar keyboardDidResize = function keyboardDidResize(win) {\n  return keyboardOpen && !keyboardDidClose(win);\n};\n/**\n * Determine if the keyboard was closed\n * Returns `true` if the `keyboardOpen` flag is set and\n * the current visual viewport height equals the\n * layout viewport height.\n */\n\n\nvar keyboardDidClose = function keyboardDidClose(win) {\n  return keyboardOpen && currentVisualViewport.height === win.innerHeight;\n};\n/**\n * Dispatch a keyboard open event\n */\n\n\nvar fireKeyboardOpenEvent = function fireKeyboardOpenEvent(win, nativeEv) {\n  var keyboardHeight = nativeEv ? nativeEv.keyboardHeight : win.innerHeight - currentVisualViewport.height;\n  var ev = new CustomEvent(KEYBOARD_DID_OPEN, {\n    detail: {\n      keyboardHeight: keyboardHeight\n    }\n  });\n  win.dispatchEvent(ev);\n};\n/**\n * Dispatch a keyboard close event\n */\n\n\nvar fireKeyboardCloseEvent = function fireKeyboardCloseEvent(win) {\n  var ev = new CustomEvent(KEYBOARD_DID_CLOSE);\n  win.dispatchEvent(ev);\n};\n/**\n * Given a window object, create a copy of\n * the current visual and layout viewport states\n * while also preserving the previous visual and\n * layout viewport states\n */\n\n\nvar trackViewportChanges = function trackViewportChanges(win) {\n  previousVisualViewport = Object.assign({}, currentVisualViewport);\n  currentVisualViewport = copyVisualViewport(win.visualViewport);\n};\n/**\n * Creates a deep copy of the visual viewport\n * at a given state\n */\n\n\nvar copyVisualViewport = function copyVisualViewport(visualViewport) {\n  return {\n    width: Math.round(visualViewport.width),\n    height: Math.round(visualViewport.height),\n    offsetTop: visualViewport.offsetTop,\n    offsetLeft: visualViewport.offsetLeft,\n    pageTop: visualViewport.pageTop,\n    pageLeft: visualViewport.pageLeft,\n    scale: visualViewport.scale\n  };\n};\n\n\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/drew/Documents/Development/Morgan_Site/MoShops/node_modules/@ionic/core/dist/esm-es5/keyboard-dd970efc.js"],"names":["KEYBOARD_DID_OPEN","KEYBOARD_DID_CLOSE","KEYBOARD_THRESHOLD","previousVisualViewport","currentVisualViewport","keyboardOpen","resetKeyboardAssist","startKeyboardAssist","win","startNativeListeners","visualViewport","copyVisualViewport","onresize","trackViewportChanges","keyboardDidOpen","keyboardDidResize","setKeyboardOpen","keyboardDidClose","setKeyboardClose","addEventListener","ev","fireKeyboardOpenEvent","fireKeyboardCloseEvent","scaledHeightDifference","height","scale","width","innerHeight","nativeEv","keyboardHeight","CustomEvent","detail","dispatchEvent","Object","assign","Math","round","offsetTop","offsetLeft","pageTop","pageLeft"],"mappings":"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","file":"x","sourcesContent":["var KEYBOARD_DID_OPEN = 'ionKeyboardDidShow';\nvar KEYBOARD_DID_CLOSE = 'ionKeyboardDidHide';\nvar KEYBOARD_THRESHOLD = 150;\nvar previousVisualViewport = {};\nvar currentVisualViewport = {};\nvar keyboardOpen = false;\n/**\n * This is only used for tests\n */\nvar resetKeyboardAssist = function () {\n    previousVisualViewport = {};\n    currentVisualViewport = {};\n    keyboardOpen = false;\n};\nvar startKeyboardAssist = function (win) {\n    startNativeListeners(win);\n    if (!win.visualViewport) {\n        return;\n    }\n    currentVisualViewport = copyVisualViewport(win.visualViewport);\n    win.visualViewport.onresize = function () {\n        trackViewportChanges(win);\n        if (keyboardDidOpen() || keyboardDidResize(win)) {\n            setKeyboardOpen(win);\n        }\n        else if (keyboardDidClose(win)) {\n            setKeyboardClose(win);\n        }\n    };\n};\n/**\n * Listen for events fired by native keyboard plugin\n * in Capacitor/Cordova so devs only need to listen\n * in one place.\n */\nvar startNativeListeners = function (win) {\n    win.addEventListener('keyboardDidShow', function (ev) { return setKeyboardOpen(win, ev); });\n    win.addEventListener('keyboardDidHide', function () { return setKeyboardClose(win); });\n};\nvar setKeyboardOpen = function (win, ev) {\n    fireKeyboardOpenEvent(win, ev);\n    keyboardOpen = true;\n};\nvar setKeyboardClose = function (win) {\n    fireKeyboardCloseEvent(win);\n    keyboardOpen = false;\n};\n/**\n * Returns `true` if the `keyboardOpen` flag is not\n * set, the previous visual viewport width equal the current\n * visual viewport width, and if the scaled difference\n * of the previous visual viewport height minus the current\n * visual viewport height is greater than KEYBOARD_THRESHOLD\n *\n * We need to be able to accommodate users who have zooming\n * enabled in their browser (or have zoomed in manually) which\n * is why we take into account the current visual viewport's\n * scale value.\n */\nvar keyboardDidOpen = function () {\n    var scaledHeightDifference = (previousVisualViewport.height - currentVisualViewport.height) * currentVisualViewport.scale;\n    return (!keyboardOpen &&\n        previousVisualViewport.width === currentVisualViewport.width &&\n        scaledHeightDifference > KEYBOARD_THRESHOLD);\n};\n/**\n * Returns `true` if the keyboard is open,\n * but the keyboard did not close\n */\nvar keyboardDidResize = function (win) {\n    return keyboardOpen && !keyboardDidClose(win);\n};\n/**\n * Determine if the keyboard was closed\n * Returns `true` if the `keyboardOpen` flag is set and\n * the current visual viewport height equals the\n * layout viewport height.\n */\nvar keyboardDidClose = function (win) {\n    return keyboardOpen && currentVisualViewport.height === win.innerHeight;\n};\n/**\n * Dispatch a keyboard open event\n */\nvar fireKeyboardOpenEvent = function (win, nativeEv) {\n    var keyboardHeight = nativeEv ? nativeEv.keyboardHeight : win.innerHeight - currentVisualViewport.height;\n    var ev = new CustomEvent(KEYBOARD_DID_OPEN, {\n        detail: { keyboardHeight: keyboardHeight }\n    });\n    win.dispatchEvent(ev);\n};\n/**\n * Dispatch a keyboard close event\n */\nvar fireKeyboardCloseEvent = function (win) {\n    var ev = new CustomEvent(KEYBOARD_DID_CLOSE);\n    win.dispatchEvent(ev);\n};\n/**\n * Given a window object, create a copy of\n * the current visual and layout viewport states\n * while also preserving the previous visual and\n * layout viewport states\n */\nvar trackViewportChanges = function (win) {\n    previousVisualViewport = Object.assign({}, currentVisualViewport);\n    currentVisualViewport = copyVisualViewport(win.visualViewport);\n};\n/**\n * Creates a deep copy of the visual viewport\n * at a given state\n */\nvar copyVisualViewport = function (visualViewport) {\n    return {\n        width: Math.round(visualViewport.width),\n        height: Math.round(visualViewport.height),\n        offsetTop: visualViewport.offsetTop,\n        offsetLeft: visualViewport.offsetLeft,\n        pageTop: visualViewport.pageTop,\n        pageLeft: visualViewport.pageLeft,\n        scale: visualViewport.scale\n    };\n};\nexport { KEYBOARD_DID_CLOSE, KEYBOARD_DID_OPEN, copyVisualViewport, keyboardDidClose, keyboardDidOpen, keyboardDidResize, resetKeyboardAssist, setKeyboardClose, setKeyboardOpen, startKeyboardAssist, trackViewportChanges };\n"]}}