{"ast":null,"code":"var _jsxFileName = \"/Users/drew/Documents/Development/Morgan_Site/MoShops/src/components/CRUDcontainer.tsx\";\nimport firebase from 'firebase'; // import firebase from 'firebase/app';\n// import 'firebase/database';\n\nimport React from 'react';\nimport { IonContent, IonItem } from '@ionic/react';\nimport CreatePortfolioEntryCard from './CRUDcards/CreatePortfolioEntryCard';\nimport ReadEntryCard from \"./CRUDcards/ReadEntryCard\";\nimport EditEntryCard from \"./CRUDcards/EditEntryCard\";\nimport DeleteEntryCard from \"./CRUDcards/DeleteEntryCard\";\nimport UploadImageCard from './CRUDcards/UploadImageCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'default':\n      return { ...state,\n        [action.type]: [action.payload]\n      };\n\n    default:\n      return { ...state,\n        [action.type]: [action.payload]\n      };\n  }\n}; // Get a reference to the database service\n\n\nconst CRUDcontainer = ({\n  pageName\n}) => {\n  const storageRef = firebase.storage().ref();\n  var listRef = storageRef.child('pictures'); // Find all the prefixes and items.\n\n  return /*#__PURE__*/_jsxDEV(IonContent, {\n    children: [/*#__PURE__*/_jsxDEV(IonItem, {\n      children: [\"Page - \", pageName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UploadImageCard, {\n      pageName: \"test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CreatePortfolioEntryCard, {\n      name: \"test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReadEntryCard, {\n      name: \"Read entry card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EditEntryCard, {\n      name: \"Edit entry card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DeleteEntryCard, {\n      name: \"Delete entry card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_c = CRUDcontainer;\nexport default CRUDcontainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CRUDcontainer\");","map":{"version":3,"sources":["/Users/drew/Documents/Development/Morgan_Site/MoShops/src/components/CRUDcontainer.tsx"],"names":["firebase","React","IonContent","IonItem","CreatePortfolioEntryCard","ReadEntryCard","EditEntryCard","DeleteEntryCard","UploadImageCard","reducer","state","action","type","payload","CRUDcontainer","pageName","storageRef","storage","ref","listRef","child"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,UAArB,C,CACA;AACA;;AACA,OAAOC,KAAP,MAAiF,OAAjF;AACA,SAAkBC,UAAlB,EAA8BC,OAA9B,QAAuN,cAAvN;AAGA,OAAOC,wBAAP,MAAqC,sCAArC;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,OAAOC,eAAP,MAA4B,6BAA5B;;;AAQA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAaC,MAAb,KAA6B;AACzC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,SAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEH,SAACC,MAAM,CAACC,IAAR,GAAe,CAACD,MAAM,CAACE,OAAR;AAFZ,OAAP;;AAIJ;AACI,aAAO,EACH,GAAGH,KADA;AAEH,SAACC,MAAM,CAACC,IAAR,GAAe,CAACD,MAAM,CAACE,OAAR;AAFZ,OAAP;AAPR;AAYH,CAbD,C,CAeA;;;AACA,MAAMC,aAAuC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAE9D,QAAMC,UAAU,GAAGhB,QAAQ,CAACiB,OAAT,GAAmBC,GAAnB,EAAnB;AACA,MAAIC,OAAO,GAAGH,UAAU,CAACI,KAAX,CAAiB,UAAjB,CAAd,CAH8D,CAK9D;;AAGA,sBACI,QAAC,UAAD;AAAA,4BACI,QAAC,OAAD;AAAA,4BAAiBL,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,eAAD;AAAiB,MAAA,QAAQ,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,wBAAD;AAA0B,MAAA,IAAI,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,YAHJ,eAKI,QAAC,aAAD;AAAe,MAAA,IAAI,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI,QAAC,aAAD;AAAe,MAAA,IAAI,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI,QAAC,eAAD;AAAiB,MAAA,IAAI,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CApBD;;KAAMD,a;AAsBN,eAAeA,aAAf","sourcesContent":["import firebase from 'firebase';\n// import firebase from 'firebase/app';\n// import 'firebase/database';\nimport React, { useReducer, useRef, useEffect, MutableRefObject, useState } from 'react';\nimport { IonList, IonContent, IonItem, IonInput, IonItemDivider, IonButton, IonLabel, IonProgressBar, IonImg, IonSelect, IonSelectOption, IonCard, IonCardHeader, IonCardSubtitle, IonCardTitle, IonCardContent } from '@ionic/react';\nimport CreateGroupEntryCard from './CRUDcards/CreateGroupEntryCard';\nimport CreatePictureEntryCard from './CRUDcards/CreatePictureEntryCard';\nimport CreatePortfolioEntryCard from './CRUDcards/CreatePortfolioEntryCard';\nimport ReadEntryCard from \"./CRUDcards/ReadEntryCard\";\nimport EditEntryCard from \"./CRUDcards/EditEntryCard\";\nimport DeleteEntryCard from \"./CRUDcards/DeleteEntryCard\";\nimport UploadImageCard from './CRUDcards/UploadImageCard';\n\n\ninterface ContainerProps {\n    pageName: string;\n}\n\n\nconst reducer = (state: any, action: any) => {\n    switch (action.type) {\n        case 'default':\n            return {\n                ...state,\n                [action.type]: [action.payload]\n            }\n        default:\n            return {\n                ...state,\n                [action.type]: [action.payload]\n            }\n    }\n}\n\n// Get a reference to the database service\nconst CRUDcontainer: React.FC<ContainerProps> = ({ pageName }) => {\n       \n    const storageRef = firebase.storage().ref();\n    var listRef = storageRef.child('pictures');\n\n    // Find all the prefixes and items.\n\n    \n    return (\n        <IonContent>\n            <IonItem>Page - {pageName}</IonItem>\n            <UploadImageCard pageName=\"test\"/>\n            <CreatePortfolioEntryCard name=\"test\"/>\n            \n            <ReadEntryCard name=\"Read entry card\"/>\n            <EditEntryCard name=\"Edit entry card\" />\n            <DeleteEntryCard name=\"Delete entry card\" />\n            \n        </IonContent>\n    );\n};\n\nexport default CRUDcontainer;\n\n\n"]},"metadata":{},"sourceType":"module"}